* add separate func stacks
** store in frame
** move args on call
** move rets on returnb
** add a_ls_splice(self, fst, lst)
* add mem call flag
** add a_lset a_func.memo
*** index on args
*** add if missing
* add tco call flag
** trigger tco
* capture stored registers in func
** scan code for STORE & push reg
* add test prim
** (test "..." [stack] body)
** add test script
* add compile stage with stack analysis
** fib
** add undef_type
** disable call type checks if applicable
* add strings
* add iterators
* add or/and prims
* add unbind prim
** (let [foo 42] (unbind foo) foo)
** add to readme/bindings
* add recoverable errors
** add vm.errors
** add struct a_error like form
** add a_error(vm, type, pos, spec, args)
** replace a_fail-calls
* add quoting
** add form.quote1-3
** add '-parser
* add multi support
** create automatically in func prim
** create automatically in lib import
* add line comments with ;
* add support for dynamic lists
** add LS_OP
* ---
* sort a_pool.free_slots in size order
** bail out in malloc if > size
** insert where >=
